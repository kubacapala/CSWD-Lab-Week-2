/*======= flexbox properties =========*/

/**** container ****/
/* display: flex; */
/* flex-direction: row | row-reverse | column | column-reverse; */
/* flex-wrap: wrap | no-wrap | wrap-reverse; */
/* flex-flow: <flex-direction value> <flex-wrap value>; (shorthand for the two properties) */
/* justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly; */
/* align-items: stretch | flex-start | flex-end | center | baseline; --> align items within the lines */
/* align-content: flex-start | flex-end | center | space-between | space-around | stretch; --> align the lines within the container */

/**** item ****/
/* order: <a number>; (see example below) */
/* flex-grow: <a number>; (relative to other items in the same continer, applied when there is more space than needed for base size) */
/* flex-shrink: <a number>; (relative to other items in the same container, applied  when there is less space than needed for the base size) */
/* flex-basis: <length> | auto; (the size of the element before the other properties are applied) */
/* flex: <flex-grow value> <flex-shrink value> <flex-basis value>; (shorthand for the three properties) */
/* align-self: auto | flex-start | flex-end | center | baseline | stretch; (individual alignment, overriding the one specified by align-items or default) */

body { font-family: helvetica, arial, sans-serif; font-size: large; }

.flex-container {
    width: 100%;
    padding: 0px;
    list-style: none;
    border: 2px solid silver;
    min-height: 12rem;
    display: flex;
}

.flex-item {
    box-sizing: border-box;
    
    width: 5.5rem;
    min-height: 2.5rem;
    margin: 0.1rem;
    padding: 0.9rem;
    
    color: white;
    font-weight: bold;
    font-size: 2rem;
    text-align: center;
}

#c1 {
    justify-content: flex-end;
    align-items: stretch;
}

#c2 {
    justify-content: space-evenly;
    flex-wrap: wrap;

}

#c3 {
    flex-direction: row-reverse;
    flex-wrap: wrap;
    justify-content: flex-end;
    align-content: flex-start;

}

#c4 {
    height: 12rem;
    flex-direction: column;
    flex-wrap: wrap-reverse;
    justify-content: center;
    align-content: center;

}

#c5 {
    justify-content: space-between;
}
#c5 :nth-child(1) { order: 1; align-self: flex-start;}
#c5 :nth-child(3) { order: 1; align-self: flex-start;}
#c5 :nth-child(5) { order: 1; align-self: flex-start;}
#c5 :nth-child(7) { order: 1; align-self: flex-start;}
#c5 :nth-child(2) { order: 2; align-self: flex-end;}
#c5 :nth-child(4) { order: 2; align-self: flex-end;}
#c5 :nth-child(6) { order: 2; align-self: flex-end;}
#c5 :nth-child(8) { order: 2; align-self: flex-end;}

#c6 :nth-child(4) { flex-grow: 4;}
#c6 :nth-child(5) { flex-grow: 4;}

#c7 :nth-child(1) {flex-basis: 25%;}
#c7 :nth-child(2) {flex-basis: 50%;}
#c7 :nth-child(3) {flex-basis: 25%;}

#c1>.flex-item {
    background-color: tomato;
}
#c2>.flex-item {
    background-color: aquamarine;
}
#c3>.flex-item {
    background-color: goldenrod;
}
#c4>.flex-item {
    background-color: greenyellow;
}
#c5>.flex-item {
    background-color: lightsalmon;
}
#c6>.flex-item {
    background-color: seagreen;
}
#c7>.flex-item {
    background-color: palevioletred;
}


